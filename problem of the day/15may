class Solution {

	private void swap(ListNode x, ListNode y) {
		if (x != null && y != null) {
			int temp = x.val;
			x.val = y.val;
			y.val = temp;
		}
	}

	public ListNode swapNodes(ListNode head, int k) {

		List<ListNode> list = new ArrayList<>();
		ListNode root = head;

		while (root != null) {
			list.add(root);
			root = root.next;
		}

		if (list.size() - k + 1 == k) {
			return head;
		}

		if (list.size() - k == 0) {
			swap(list.get(0), list.get(list.size() - 1));
			return head;
		}
		ListNode x = null;
		ListNode y = null;

		for (int i = 0; i < list.size(); i++) {
			if (i == k - 1) {
				x = list.get(i);
				y = list.get(list.size() - k);
				break;
			}
		}

		swap(x, y);
		return head;
	}
}
