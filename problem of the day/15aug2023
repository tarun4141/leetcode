/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode left = null, right = null, temp1 = null, temp2 = null;
        while (head != null) {
            if (head.val < x) {
                if (left != null) left.next = head;
                else temp2 = head;
                left = head;
            } else {
                if (right != null) right.next = head;
                else temp1 = head;
                right = head;
            }
            head = head.next;
        }
        if (left != null) left.next = temp1;
        if (right != null) right.next = null;
        return temp2 == null ? temp1 : temp2;
    }
}
