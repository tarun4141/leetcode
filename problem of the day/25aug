class Solution {
    int dp[][][];
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length()+s2.length()!=s3.length()){
            return false;
        }
        char c1[] = s1.toCharArray();
        char c2[] = s2.toCharArray();
        char c3[] = s3.toCharArray();
        dp = new int[s1.length()+1][s2.length()+1][s3.length()+1];
        for(int i=0;i<s1.length()+1;i++){
            for(int j=0;j<s2.length()+1;j++){
                for(int k=0;k<s3.length()+1;k++){
                    dp[i][j][k] = -1;
                }
            }
        }
        boolean r = fun(c1,c2,c3,0,0,0);
        return r;
    }
    boolean fun(char c1[],char c2[],char c3[],int i,int j,int k){
        if(k==c3.length){
            return true;
        }
        if(i<c1.length+1 && j<c2.length+1 && dp[i][j][k]!=-1){
            if(dp[i][j][k]==0){
                return false;
            }
            else{
                return true;
            }
        }
        boolean r1 = false,r2 = false,r3 = false;
        if(i<c1.length && c1[i]==c3[k] && j<c2.length && c2[j]==c3[k]){
            r1 = fun(c1,c2,c3,i+1,j,k+1)||fun(c1,c2,c3,i,j+1,k+1);
        }
        else if(i<c1.length && c1[i]==c3[k]){
            r2 = fun(c1,c2,c3,i+1,j,k+1);
        }
        else if(j<c2.length && c2[j]==c3[k]){
            r3 = fun(c1,c2,c3,i,j+1,k+1);
        }
        boolean r = (r1||r2)||r3;
        if(r==true){
            dp[i][j][k] = 1;
        }
        else{
            dp[i][j][k] = 0;
        }
        return r;
    }
}
