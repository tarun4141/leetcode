class Solution {
    public int noa(int n,int m,int k,int index,int cost,int prev,Integer [][][] dp){
        if(index==n){
            if(cost==k)
            return 1;

            return 0;
        }
        if(cost>k)
        return 0;

        if(dp[index][prev][cost]!=null)
        return dp[index][prev][cost];
        long ans=0;
        if(cost<k){
            for(int i=prev+1;i<=m;i++){
                ans=(ans+noa(n,m,k,index+1,cost+1,i,dp))%1000000007;
            }
        }

        for(int i=1;i<=prev;i++){
            ans=(ans+noa(n,m,k,index+1,cost,prev,dp))%1000000007;
        }

        return dp[index][prev][cost]=(int)ans;
    }
    public int numOfArrays(int n, int m, int k) {
        Integer [][][] dp=new Integer[n+1][m+1][k+1];
        return noa(n,m,k,0,0,0,dp);
    }
}
