class Solution {
    private static int dfs(int node,ArrayList<ArrayList<Integer>>adj, int[] informTime)
    {
        int wt= informTime[node];
        int max=0;
        for(int neighbour:adj.get(node))
        {
            max=Math.max(max,dfs(neighbour,adj,informTime));
        }
        return wt+max;
    }
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        ArrayList<ArrayList<Integer>>adj=new ArrayList<>();
        for(int i=0;i<n;i++)
        adj.add(new ArrayList<>());
        int root=headID;
        for(int i=0;i<n;i++)
        {
            if(manager[i]==-1)
            {
            continue;
            }
            adj.get(manager[i]).add(i);
        }
        return dfs(root,adj,informTime);
    }
}
