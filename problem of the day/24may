class Solution {
    public long maxScore(int[] nums1, int[] nums2, int k) {
        List<int[]> nums21=new ArrayList<>();
        int size=nums1.length;
        for(int i=0;i<size;i++) {
            nums21.add(new int[]{nums2[i],nums1[i]});
        }
        Collections.sort(nums21, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                if(a[0]==b[0]) {
                    return b[1]-a[1];
                }
                return b[0]-a[0];
            }
        });
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        long sum=0,result=0;
        for(int i=0;i<size;i++) {
            sum+=nums21.get(i)[1];
            if(i==k-1) {
                result=sum*nums21.get(i)[0];
            }
            if(i>=k) {
                sum-=pq.poll();
                result=Math.max(result,sum*nums21.get(i)[0]);
            }
            pq.add(nums21.get(i)[1]);
        }
        return result;
    }
}
