class Solution {

    public boolean makeEqual(String[] words) {
        int char_count = 0;
        for (String word: words) char_count += word.length();
        
        if (char_count % words.length != 0) return false;
        
        int[] bitmap = new int[26];
        
        for (String word: words) {
            for (char ch: word.toCharArray()) {
                bitmap[ch - 'a']++;
            }
        }
        
        for (int frequency: bitmap) {
            if (frequency % words.length != 0) return false;
        }
        
        return true;
    }
}

// Wrong approach
//         int char_count = 0;
//         for (String word: words)
//             for (char ch: word.toCharArray())
//                 char_count += 1;
//         return char_count % words.length == 0;

// 2nd approach

/*       Map<Character, Integer> map = new HashMap<>();

         for (String word : words) 
             for (char ch : word.toCharArray()) 
                 map.put(ch, map.getOrDefault(ch, 0) + 1);

         for (char key : map.keySet())
             if (map.get(key) % words.length != 0) 
                 return false;

         return true; */
