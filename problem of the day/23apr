class Solution {
    public int minInsertions(String s) {
        return s.length()-mySolutionLCPDP(s);

    }

    private static int mySolutionLCPDP(String s) {
    int m = s.length();
    int[][] dp = new int[m + 1][m + 1];

    for (int i = 0; i < dp.length; i++) {
        dp[i][0] = 0;
        dp[0][i] = 0;
    }

    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= m; j++) {
            if (s.charAt(i - 1) == s.charAt(m - 1 - (j - 1))) {
                dp[i][j] = 1 + dp[i - 1][j - 1];
            } else {
                dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }
    return dp[m][m];

}
}
